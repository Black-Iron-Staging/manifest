# Black Iron Project #
<img src="https://imgur.com/rUip0he.jpg">

A Small Description of the Iron V5.X
----------------------------------

This ROM is a LineageOS so it will follow all its developments. I just added the features that I think are useful for my use of the device. Since I worked on it, I thought I'd share the work with those who make the same use of the device as me !! Good building.

Credits
-------
- CyanogenMod/LineageOS
- Derpfest
- AICP
- AOSiP
- AOSPA
- BootleggersROM
- CrDroid
- DirtyUnicorns
- NitrogenOS
- OmniROM
- PixelExperience
- Pixel Extended
- POSP
- RevengeOS
- RisingOS
- ... and my eternal friend @Bicet

### For Building
--------

Create dirs, and install soft, libs
-----------------------------------

    sudo su
    apt update
    apt install repo git gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 libncurses5 rsync lib32ncurses-dev x11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig
    exit

Create BlackIron folder
----------------------------------

    mkdir ~/BlackIron
    cd ~/BlackIron

GIT config (nickname, e-mail)
-----------------------------

    git config --global user.email "mail@domain.com"
    git config --global user.name "login"

To initialize your local repository use
---------------------------------------


### Initialize local repository ###

```bash
repo init -u https://github.com/Black-Iron-Project/manifest -b v15 --git-lfs
```
### Sync ###

```bash
repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags
```
You can just use `repo sync` or above command, but this will save you from lot of terminal spam, data and time.
```bash
repo sync -c --force-sync --optimized-fetch --no-tags --no-clone-bundle --prune -j$(nproc --all)
```

GMS Flags
---------------
```bash
# GMS build flags
# ship with GMS packages, replaces default AOSP packages with Google manufactured packages.
WITH_GMS := true/false

# These flags needs WITH_GMS set to true
# for more information about core GMS flags, please see vendor/gms/common/common-vendor.mk
# ships core GMS components that are needed to run GMS environment
TARGET_CORE_GMS := true/false

# extra add-ons for core GMS builds
# List of add-ons
# PRODUCT_PACKAGES += \
#    Photos \
#    MarkupGoogle \
#    LatinIMEGooglePrebuilt \
#    AiWallpapers \
#    WallpaperEmojiPrebuilt \
#    PrebuiltDeskClockGoogle \
#    CalculatorGooglePrebuilt \
#    CalendarGooglePrebuilt \
#    Velvet
TARGET_CORE_GMS_EXTRAS := true/false
```

### Build ###

```bash

# Set up environment
$ . build/envsetup.sh

# Choose a target
$ blkilunch $device $build_type (for example - blkilunch raphael userdebug)

# Build the code
$ blki b
```


